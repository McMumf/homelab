service:
  type: ClusterIP
  port: 8080
statefulset:
  storage:
    enabled: true
    storageClassName: openebs
zigbee2mqtt:
  homeassistant:
    enabled: true
  permit_join: false
  timezone: UTC
  mqtt:
    # -- Required: MQTT server URL (use mqtts:// for SSL/TLS connection)
    server: "mqtt://mosquitto.smart-home:1883"
    # -- Optional: MQTT base topic for Zigbee2MQTT MQTT messages (default: zigbee2mqtt)
    base_topic: zigbee2mqtt
  serial:
    port: tcp://192.168.1.54:6638
    adapter: ember
  # -- Optional: OTA update settings
  # See https://www.zigbee2mqtt.io/guide/usage/ota_updates.html for more info
  ota:
    # -- Optional: use IKEA TRADFRI OTA test server, see OTA updates documentation (default: false)
    ikea_ota_use_test_url: false
    update_check_interval: 1440
    disable_automatic_update_check: true
  frontend:
    # -- If the front end should be enabled, true by default. Pod health checks are based on this, so disabling
    # it will cause an error loop unless health checks are updated.
    enabled: true
    # -- Mandatory, default 8080
    port: 8080
    # -- Optional, empty by default to listen on both IPv4 and IPv6. Opens a unix socket when given a path instead of an address (e.g. '/run/zigbee2mqtt/zigbee2mqtt.sock')
    # Don't set this if you use Docker or the Home Assistant add-on unless you're sure the chosen IP is available inside the container
    host: ""
    # -- Optional, enables authentication, disabled by default, cleartext (no hashing required)
    auth_token: null
    # -- Optional, url on which the frontend can be reached, currently only used for the Home Assistant device configuration page
    url: https://z2m.mcmumf.dev
  advanced:
    # -- Optional: Transmit power setting in dBm (default: 5).
    # This will set the transmit power for devices that bring an inbuilt amplifier.
    # It can't go over the maximum of the respective hardware and might be limited
    # by firmware (for example to migrate heat, or by using an unsupported firmware).
    # For the CC2652R(B) this is 5 dBm, CC2652P/CC1352P-2 20 dBm.
    transmit_power: 20
# -- Ingress configuration. Zigbee2mqtt does use webssockets, which is not part of the Ingress standart settings.
# most of the popular ingresses supports them through annotations. Please check https://www.zigbee2mqtt.io/guide/installation/08_kubernetes.html
# for examples.
ingress:
  # -- When enabled a new Ingress will be created
  enabled: true
  # -- The ingress class name for the ingress
  ingressClassName: nginx
  # -- Additional labels for the ingres
  labels: {}
  # -- Ingress implementation specific (potentially) for most use cases Prefix should be ok
  pathType: Prefix
  # Additional annotations for the ingress. ExternalDNS, and CertManager are tipically integrated here
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    gethomepage.dev/description: Manage zigbee devices
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Operations
    gethomepage.dev/icon: https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/refs/heads/master/images/logo.png
    gethomepage.dev/name: Zigbee2MQTT
    gethomepage.dev/pod-selector: "app=zigbee2mqtt"
  # -- list of hosts that should be allowed for the zigbee2mqtt service
  hosts:
    - host: z2m.mcmumf.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
        - path: /api
          pathType: ImplementationSpecific
  # -- configuration for tls service (ig any)
  tls:
    - secretName: z2m.mcmumf.dev-tls
      hosts:
        - z2m.mcmumf.dev

# -- Extra Resources. Define some extra resources to be created, such as ExternalResource or Secrets, etc.
extraResources: []
  # - apiVersion: v1
  #   kind: Secret
  #   metadata:
  #     name: example-secret
  #     labels: {}
  #   type: Opaque
  #   stringData:
  #     username: admin
  #     password: mypassword
