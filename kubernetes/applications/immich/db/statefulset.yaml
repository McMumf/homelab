apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-postgres
  namespace: apps
spec:
  selector:
    matchLabels:
      app: immich-postgres
  serviceName: "immich-postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: immich-postgres
    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 10
      containers:
        - name: immich-postgres
          image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
          resources:
            limits:
              cpu: 2
              ephemeral-storage: 8Gi
              memory: 2Gi
            requests:
              cpu: 1
              ephemeral-storage: 8Gi
              memory: 1Gi
          args:
            - postgres
            - -c
            - shared_preload_libraries=vectors.so
            - -c
            - search_path="$(user)", public, vectors
            - -c
            - logging_collector=on
            - -c
            - max_wal_size=2GB
            - -c
            - shared_buffers=512MB
            - -c
            - wal_compression=on
          env:
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: immich-postgres-secrets
                  key: pg-password
            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  name: immich-postgres-secrets
                  key: pg-username
            - name: "POSTGRES_DB"
              value: "immich"
            - name: "POSTGRES_INITDB_ARGS"
              value: "--data-checksums"
          ports:
            - containerPort: 5432
              name: tcp
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
              subPath: data
          livenessProbe:
            exec:
              command:
                - pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
            initialDelaySeconds: 30
            periodSeconds: 300
  volumeClaimTemplates:
    - metadata:
        name: db-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "openebs"
        resources:
          requests:
            storage: 32Gi
